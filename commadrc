#!/bin/bash

VERSION="2019.09.08"

usage() {
cat<<EOS
Usage: commad [-n] [+n] [<args>] 
  <no arg>     Change directory HOME
  <path>       Change directory <path>
 
  -l, --list   Show COMMAD_STACK => \`listd\`
  -c, --clear  Clear COMMAD_STACK => \`cleard\`
  --version    Print version

  -1           Change previous directory => \`prevd\`
  -2           Change 2 previous directory
  -n           Change n previous directory
  +1           Change next directory => \`nextd\`
  +2           Change 2 next directory
  +n           Change n next directory
EOS
}

function repeat() {
    number=$1
    shift
    for n in $(seq $number); do
      $@
    done
}

# ## Initialize
COMMAD_STACK=${COMMAD_STACK:-$PWD}
COMMAD_POINTER=${COMMAD_POINTER:-0}

function stackd {
    # , replaced for cd

    if [[ $# = 0 ]]; then
        builtin cd $HOME
    elif [[ -f $@ ]]; then
        builtin cd "$(dirname $@)"
    elif [[ -d $@ ]]; then
        builtin cd "$@"
    else
        echo -en "$@: Not found. Do you make it as dirctory? [y/N] " 
        read response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]; then
            mkdir -p "$@"
        fi
        builtin cd "$@"
    fi
    [[ $PWD = $OLDPWD ]] && return;
    echo "$PWD" >> ~/.cd_history

    COMMAD_STACK=$(echo -e "$COMMAD_STACK" | head -$(( $COMMAD_POINTER + 1 )) )
    COMMAD_STACK="${COMMAD_STACK}\n$PWD"
    (( COMMAD_POINTER += 1 ))
}

function _prevd {
    # prevd for cd previous directory

    # COMMAD_POINTER is always non-negative.
    [[ $COMMAD_POINTER -le 0 ]] && return

    prev_dir=$(echo -e "$COMMAD_STACK" | sed -n ${COMMAD_POINTER}P)
    builtin cd $prev_dir
    echo "$PWD" >> ~/.cd_history
    (( COMMAD_POINTER -= 1 ))
}

function prevd {
    [[ "$1" =~ ^[0-9]+$ ]] && n=$1 || n=0 # check number or not
    repeat $n _prevd
}

function _nextd {
    # nextd for cd next directory

    # COMMAD_POINTER is always less than COMMAD_STACK size.
    stack_len=$(echo -e "$COMMAD_STACK" | wc -l)
    [[ $COMMAD_POINTER -ge $((stack_len - 1)) ]] && return

    next_dir=$(echo -e "$COMMAD_STACK" | sed -n $((COMMAD_POINTER + 2))P)
    builtin cd $next_dir
    echo "$PWD" >> ~/.cd_history
    (( COMMAD_POINTER += 1 ))
}

function nextd {
    [[ "$1" =~ ^[0-9]+$ ]] && n=$1 || n=0
    repeat $n _nextd
}

function listd {
    GREEN='\e[32m'
    NC='\e[m' # No Color

    (( i = 0 ))
    echo -e "$COMMAD_STACK" | while read line; do
        [[ $i < $COMMAD_POINTER ]] && prefix="-$(( COMMAD_POINTER - i ))  "
        [[ $i > $COMMAD_POINTER ]] && prefix="+$(( i - COMMAD_POINTER ))  "
        [[ $i = $COMMAD_POINTER ]] && prefix="${GREEN}* ${NC}  "
        echo -e "$prefix$line"
        (( i += 1 ))
    done
}

function cleard {
    COMMAD_POINTER=0
    COMMAD_STACK="$PWD"
}

function commad {
    OPT=$1
    case "$OPT" in
        '-h'|'--help' )
            usage
            ;;
        '--version' )
            echo $VERSION
            ;;
        '-l'|'--list' )
            listd
            ;;
        '-c'|'--clear' )
            cleard
            ;;
        -*)
            n=$(echo "$OPT" | awk -F'-' '{print $NF}')
            prevd $n
            ;;
        +*)
            n=$(echo "$OPT" | awk -F'+' '{print $NF}')
            nextd $n
            ;;
        *)
            stackd $@
            ;;
    esac
}
